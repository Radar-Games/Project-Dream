<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_playerIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Variables
canDash = true;
canPunch = true;
image_speed = 0.25;
phy_fixed_rotation = true;
punching = false;
hp = 100;
canBeDamaged = true;
speed_ = 0;
alpha = 0;
global.picked = false;
sped = 0;

// --Surfaces

// Damage Surface
//damageSurf = surface_create(view_xview+view_wview, view_yview+view_hview)

// --Arrays

// Inventory Array
global.array_inv = 10;
array_length_1d(global.array_inv);
global.array_inv[0] = '';
global.array_inv[1] = '';
global.array_inv[2] = '';
global.array_inv[3] = '';
global.array_inv[4] = '';
global.array_inv[5] = '';
global.array_inv[6] = '';
global.array_inv[7] = '';
global.array_inv[8] = '';
global.array_inv[9] = '';

// Inventory Quantity Array
global.array_quant = 10;
array_length_1d(global.array_quant);
global.array_quant[0] = 000;
global.array_quant[1] = '';
global.array_quant[2] = '';
global.array_quant[3] = '';
global.array_quant[4] = '';
global.array_quant[5] = '';
global.array_quant[6] = '';
global.array_quant[7] = '';
global.array_quant[8] = '';
global.array_quant[9] = '';

// Inventory Equiped Array
global.array_equip = 10;
array_length_1d(global.array_equip);
global.array_equip[0] = 000;
global.array_equip[1] = '';
global.array_equip[2] = '';
global.array_equip[3] = '';
global.array_equip[4] = '';
global.array_equip[5] = '';
global.array_equip[6] = '';
global.array_equip[7] = '';
global.array_equip[8] = '';
global.array_equip[9] = '';
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canBeDamaged = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Alarm 0

canPunch = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_player</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement

show_debug_overlay(1);
show_debug_message(phy_speed);

a = keyboard_check(ord('A'));
d = keyboard_check(ord('D'));
w = keyboard_check(ord('W'));
s = keyboard_check_pressed(ord('S'));
s2 = keyboard_check_released(ord('S'));
leftClick = mouse_check_button_pressed(mb_left);

// ;P ;P ;P ;P ;P ;P
e = keyboard_check_pressed(ord('E'));
l = keyboard_check_pressed(ord('L'));
o = keyboard_check_pressed(ord('O'));
i = keyboard_check_pressed(ord('I'));

// Commands

if(keyboard_check_pressed(vk_enter)){
    commands(get_string('command', ''));
}

if(e &amp;&amp; l &amp;&amp; o &amp;&amp; i &amp;&amp; s &amp;&amp; e){
    show_message(';P')
}

if(global.invActive == false){    
    if(a &amp;&amp; punching = false){
        phy_position_x -= 7;
        if(keyboard_check_pressed(vk_shift) &amp;&amp; canDash){
            physics_apply_impulse(x, y, -80, 0);
            can_dash = false;
            alarm[0] = 10;
            image_index = spr_playerDashing;
        }
        image_xscale = -1;
    }
    if(d &amp;&amp; punching == false){
        phy_position_x += 7;
        if(keyboard_check_pressed(vk_shift) &amp;&amp; canDash){
            physics_apply_impulse(x, y, 80, 0);
            can_dash = false;
            alarm[0] = 10; 
            image_index = spr_playerDashing;
        }
        image_xscale = 1;
    }
    
    if(place_meeting(x, y+1, obj_solid)) || (place_meeting(x, y+1, obj_halfSolid)) || (place_meeting(x, y+1, obj_plank)){
        if(w &amp;&amp; phy_speed_y == 0){
            sprite_index = spr_playerIdle;
            physics_apply_impulse(x, y, 0, -230);
        }
    }
    
    if(s2){
        phy_position_y += 1;
    }
    
    if(s){
        phy_position_y -= 1;
    }
    
    if(phy_speed_y &lt; 0){
        sprite_index = spr_playerFalling;
    }else{
        sprite_index = spr_playerIdle;
    }
    
    if(global.array_equip[0] == 1){
        if(leftClick &amp;&amp; canPunch == true){
            punching = true;
            sprite_index = spr_playerPunch;
            instance_create(x, y, obj_hitbox);
            canPunch = false;
            alarm[0] = 8;
            punching = false;
        }
    }
    if(global.array_equip[0] == 2){
        if(leftClick &amp;&amp; punching = false){
            if(isInInv(4) == true){
                punching = true;
                sprite_index = spr_playerSpear;
                global.array_quant[real(checkInvNum(4))] = real(global.array_quant[real(checkInvNum(4))]) - 5;
                instance_create(x, y-32, obj_spear);
                canPunch = false;
                alarm[0] = 8;
                punching = false;
            }
        }
    }
    if(global.array_equip[0] == 3){
        if(leftClick &amp;&amp; punching = false){
            punching = true;
            instance_create(x, y-20, obj_plank);
            canPunch = false;
            alarm[0] = 8;
            punching = false;
        }
    }
}


    
if(mouse_check_button_pressed(mb_left)){
    //sprite_index = spr_playerSpear;
}

if(mouse_check_button_released(mb_left)){
    // instance_create(x, y, obj_spear);
    // sprite_index = spr_playerIdle;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_plank">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///collison
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_darkness">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collison
if(canBeDamaged == true){
    hp -= 1;
    canBeDamaged = false;
    alarm[1] = 3;
    alpha = 0.75;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_halfSolid">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>collison</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collison
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = spr_playerIdle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if(global.picked == true){
    draw_circle(x, y, 64, true)
}

//surface_set_target(damageSurf);
//draw_clear(c_black);
//surface_reset_target();
//draw_surface_ext(damageSurf, view_xview, view_yview, 1, 1, 0, c_white, alpha);
//alpha = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="111">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>commands(get_string('command', '/'));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>1</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>3,1</point>
    <point>29,1</point>
    <point>29,32</point>
    <point>3,32</point>
  </PhysicsShapePoints>
</object>
